<?php

namespace app\modules\Fanavaran\controllers;

use app\modules\Fanavaran\models\HttpCarLookup;
use app\modules\Fanavaran\models\core\Conf;
use app\modules\vehicle\models\PlaqueKind;
use app\modules\vehicle\models\PlaqueLetter;
use app\modules\vehicle\models\VehicleGroup;
use app\modules\vehicle\models\VehicleKind;
use app\modules\vehicle\models\VehicleSystem;
use app\modules\vehicle\models\VehicleUseType;
use yii\web\Controller;
use yii\web\Response as webResponse;

class CarLookupController extends Controller
{

    public function behaviors(): array
    {
        $parent = parent::behaviors(); // TODO: Change the autogenerated stub




        $parent['corsFilter'] = [
            'class' => \yii\filters\Cors::class,
        ];

        $parent['contentNegotiator'] = [
            'class' => 'yii\filters\ContentNegotiator',
            'formats' => [ 'application/json' => webResponse::FORMAT_JSON ]
        ];

        return $parent;
    }

    public function actionVehicleGroup(): array
    {


        $model = new HttpCarLookup();

        $data = $model->vehicleGroup();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);


        return $data;
    }

    public function actionVehicleType(): array
    {
        $model = new HttpCarLookup();

        $data = $model->vehicleType();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);



        return $data;
    }

    public function actionVehicleSystem(): array
    {
        $model = new HttpCarLookup();

        $data = $model->vehicleSystem();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);


        return $data;
    }

    public function actionVehicleKinds(): array
    {

        $model = new HttpCarLookup();

        $data = $model->vehicleKinds();

        if ($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);


        return $data;

    }

    public function actionPlaqueKinds(): array
    {

        $model = new HttpCarLookup();

        $data = $model->plaqueKinds();



        if ($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }

    public function actionPlaqueLetter(): array
    {
        $model = new HttpCarLookup();

        $data = $model->letterPlaque();

        $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }


    public function actionPlaqueDesign(): array
    {
        $model = new HttpCarLookup();

        $data = $model->plaqueDesign();
        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }


    public function actionPlaqueSample(): array
    {
        $model = new HttpCarLookup();

        $data = $model->plaqueSample();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }

    public function actionCovRates(): array
    {
        #TODO: empty return data checking request
        # ------------------------------------------

        $model = new HttpCarLookup();

        $data = $model->covRates();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;

    }


    public function actionFuelType(): array
    {
        $model = new HttpCarLookup();

        $data = $model->fuelType();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }


    public function actionReasonNoInsurance(): array
    {
        $model = new HttpCarLookup();

        $data = $model->reasonNoInsurance();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }


    public function actionAllowedRelationDiscountTransfer(): array
    {
        $model = new HttpCarLookup();

        $data = $model->allowedRelationDiscountTransfer();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }


}