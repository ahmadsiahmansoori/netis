<?php

namespace app\modules\Fanavaran\controllers;

use app\modules\Fanavaran\models\core\Conf;
use app\modules\Fanavaran\models\HttpCommon;
use yii\web\Controller;
use yii\web\Response as webResponse;

class CommonController extends Controller
{

    public function behaviors(): array
    {
        $parent = parent::behaviors(); // TODO: Change the autogenerated stub




        $parent['corsFilter'] = [
            'class' => \yii\filters\Cors::class,
        ];

        $parent['contentNegotiator'] = [
            'class' => 'yii\filters\ContentNegotiator',
            'formats' => [ 'application/json' => webResponse::FORMAT_JSON ]
        ];

        return $parent;
    }


    public function actionInsuranceCorp(): array
    {
        $model = new HttpCommon();

        $data = $model->insuranceCorp();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;

    }


    public function actionInsuranceLinesCategory(): array
    {
        $model = new HttpCommon();
        $data = $model->insuranceLinesCategory();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);


        return $data;

    }

    public function actionInsuranceLines(): array
    {
        $model = new HttpCommon();

        # URL_INSURANCE_LINES
        $data = $model->insuranceLInes();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);


        return $data;

    }


    public function actionInsuranceFinalStatus(): array
    {
        $model = new HttpCommon();

        # URL_INSURANCE_LINES
        $data = $model->insuranceFinalStatus();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);


        return $data;

    }


    public function actionDmgCaseType(): array
    {
        $model = new HttpCommon();

        # URL_DMG_CASE_TYPES
        $data = $model->dmgCaseType();


        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);


        return $data;

    }



    public function actionCountries(): array
    {
        $model = new HttpCommon();

        # URL_DMG_CASE_TYPES
        $data = $model->countries();


        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);



        return $data;



    }

    public function actionProvinces(): array
    {
        $model = new HttpCommon();

        # URL_DMG_CASE_TYPES
        $data = $model->provinces();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);


        return $data;


    }


    public function actionCites(): array
    {
        $model = new HttpCommon();

        # URL_DMG_CASE_TYPES
        $data = $model->cites();


        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);


        return $data;


    }

    public function actionAreas(): array
    {
        $model = new HttpCommon();


        $data = $model->areas();


        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }


    public function actionCalcKinds(): array
    {
        $model = new HttpCommon();


        $data = $model->calcKind();


        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);



        return $data;


    }

    public function actionAns(): array
    {
        $model = new HttpCommon();


        $data = $model->ans();


        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);


        return $data;


    }


    public function actionHas(): array
    {
        $model = new HttpCommon();
        $data = $model->has();
        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);


        return $data;

    }


    public function actionLossesHistory(): array
    {
        $model = new HttpCommon();
        $data = $model->lossesHistory();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }

    public function actionAdditionalCov(): array
    {
        $model = new HttpCommon();
        $data = $model->additionalCov();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }


    public function actionBasicCov(): array
    {
        $model = new HttpCommon();
        $data = $model->basicCov();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }

    public function actionCovRate(): array
    {

        # TODO: dont table
        $model = new HttpCommon();
        $data = $model->covRate();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }

    public function actionDriverType(): array
    {
        $model = new HttpCommon();
        $data = $model->driverType();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }

    public function actionVehicleHullDiscount(): array
    {
        $model = new HttpCommon();
        $data = $model->vehicleHullDiscount();

        if($data['status'])
            $data = Conf::mapPascalCaseToSnakeCase( $data['response']);

        return $data;
    }



}