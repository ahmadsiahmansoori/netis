<?php

namespace app\modules\fileManager\controllers;

use app\modules\Fanavaran\models\core\Auth;
use app\modules\fileManager\models\ManagerFile;
use app\modules\order\models\Order;
use app\modules\order\models\search\OrderSearchModel;
use yii\data\ActiveDataProvider;
use yii\filters\auth\CompositeAuth;
use yii\filters\auth\HttpBearerAuth;
use yii\rest\ActiveController;
use yii\web\NotFoundHttpException;
use yii\web\Response as webResponse;
use yii\web\UnauthorizedHttpException;

class FileController extends ActiveController
{



    public $modelClass = ManagerFile::class;

    public function behaviors(): array
    {
        $parent = parent::behaviors(); // TODO: Change the autogenerated stub

        $parent['corsFilter'] = [
            'class' => \yii\filters\Cors::class,
        ];

        $parent['contentNegotiator'] = [
            'class' => 'yii\filters\ContentNegotiator',
            'formats' => [ 'application/json' => webResponse::FORMAT_JSON ]
        ];

        $parent['authenticator'] = [
            'class' => CompositeAuth::class,
            'authMethods' => [
                HttpBearerAuth::class,
            ],
            'except' => []
        ];


        return $parent;
    }

    public function actions(): array
    {
        $actions = parent::actions(); // TODO: Change the autogenerated stub
        unset($actions['create']);
        $actions['view']['findModel'] = [$this, 'oneDataProvider'];
        return $actions;
    }


    public function oneDataProvider($id): ManagerFile
    {
        $model = ManagerFile::findOne([
            'id' => $id ,
            'user_id' => \Yii::$app->user->getId()
        ]);

        if (empty($model)) {
            throw new NotFoundHttpException('object not found ');
        }


        return $model;

    }

    public function actionReadFile($link , $token) {

        $user = \app\models\Auth::findOne(['auth_kay' => $token]);

        if (empty($user)) {
            throw new UnauthorizedHttpException('Unauthorized');
        }



        $model = ManagerFile::findOne([
            'user_id' => $user->user_id,
            'link' => $link
        ]);

        if (empty($model)) {
            throw new NotFoundHttpException('object not found ');
        }

        header("Content-type: image/png");
        header("Cache-Control: no-store, no-cache");
        header('Content-Disposition: attachment; filename="avatar.png"');
        header('Content-Length: ' . filesize($model->path));
        readfile($model->path);      // push it out
        exit();

    }



    public function actionCreate() {

        try {

            $trans = \Yii::$app->db->beginTransaction();
            $model = new ManagerFile();
            $model->attributes = \Yii::$app->request->post();
            $model->user_id = \Yii::$app->user->getId();
            $model->status = 1;
            $model->link = \Yii::$app->security->generateRandomString(10) . ":" . time();
            $file = $_FILES['file'];
            $type = strtolower(pathinfo(basename($file['name']) , PATHINFO_EXTENSION));
            $name = \Yii::$app->security->generateRandomString(10) . ':' . time() . '.' . $type;
            $path = '../files/' . $name;
            $model->extension = $type;
            $model->path = $path;

            if (!$model->save()) {
                $trans->rollBack();
                \Yii::$app->response->statusCode = 422;
                return $model->errors;
            }


            if (!file_exists('../files')) {
               mkdir('../files');
            }

            if(!move_uploaded_file($file['tmp_name'], $path)) {
                $trans->rollBack();
                \Yii::$app->response->statusCode = 500;
                return 'Fail , upload file ...';
            }


            $trans->commit();
            return $model;

        }catch (\Exception $err) {
            \Yii::$app->response->statusCode = 500;
            return $err->getMessage();
        }


    }




}